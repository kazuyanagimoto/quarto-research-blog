[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Researching as if to Blog",
    "section": "",
    "text": "Madrid Traffic Accidents Dataset\n\n\n\n\n\n\ndescriptive\n\n\ntraffic accidents\n\n\n\n\n\n\n\n\n\nMar 24, 2024\n\n\nKazuharu Yanagimoto\n\n\n\n\n\n\n\n\n\n\n\n\nA Simple Life Cycle Model\n\n\n\n\n\n\nmodel\n\n\n\n\n\n\n\n\n\nMar 21, 2024\n\n\nKazuharu Yanagimoto\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/240324_accident_bike/index.html",
    "href": "posts/240324_accident_bike/index.html",
    "title": "Madrid Traffic Accidents Dataset",
    "section": "",
    "text": "This is an analysis of the Madrid Traffic Accidents dataset. You can find a code for downloading and cleaning the data in code/00_download/ and code/01_cleaning/.\nCode\naccident_bike |&gt;\n  ggplot(aes(x = fct_rev(type_person), fill = fct_rev(gender))) +\n  geom_bar(position = \"dodge\") +\n  coord_flip() +\n  scale_fill_gender() +\n  labs(x = NULL, y = NULL, fill = NULL, title = \"Number of Accidents\") +\n  theme(legend.position = c(0.85, 0.1), panel.grid.major.y = element_blank()) +\n  guides(fill = guide_legend(reverse = TRUE))"
  },
  {
    "objectID": "posts/240324_accident_bike/index.html#logit-regression-of-hospitalization-and-death",
    "href": "posts/240324_accident_bike/index.html#logit-regression-of-hospitalization-and-death",
    "title": "Madrid Traffic Accidents Dataset",
    "section": "Logit Regression of Hospitalization and Death",
    "text": "Logit Regression of Hospitalization and Death\n\n\nCode\nmodels &lt;- list(\n  \"(1)\" = feglm(\n    is_hospitalized ~\n      type_person + positive_alcohol + positive_drug | age_c + gender,\n    family = binomial(logit),\n    data = accident_bike\n  ),\n  \"(2)\" = feglm(\n    is_hospitalized ~\n      type_person +\n        positive_alcohol +\n        positive_drug |\n        age_c + gender + type_vehicle,\n    family = binomial(logit),\n    data = accident_bike\n  ),\n  \"(3)\" = feglm(\n    is_hospitalized ~\n      type_person +\n        positive_alcohol +\n        positive_drug |\n        age_c + gender + type_vehicle + weather,\n    family = binomial(logit),\n    data = accident_bike\n  ),\n  \"(4)\" = feglm(\n    is_died ~ type_person + positive_alcohol + positive_drug | age_c + gender,\n    family = binomial(logit),\n    data = accident_bike\n  ),\n  \"(5)\" = feglm(\n    is_died ~\n      type_person +\n        positive_alcohol +\n        positive_drug |\n        age_c + gender + type_vehicle,\n    family = binomial(logit),\n    data = accident_bike\n  ),\n  \"(6)\" = feglm(\n    is_died ~\n      type_person +\n        positive_alcohol +\n        positive_drug |\n        age_c + gender + type_vehicle + weather,\n    family = binomial(logit),\n    data = accident_bike\n  )\n)\n\ncm &lt;- c(\n  \"type_personPassenger\" = \"Passenger\",\n  \"type_personPedestrian\" = \"Pedestrian\",\n  \"positive_alcoholTRUE\" = \"Positive Alcohol\"\n)\n\ngm &lt;- tibble(\n  raw = c(\"nobs\", \"FE: age_c\", \"FE: gender\", \"FE: type_vehicle\", \"FE: weather\"),\n  clean = c(\n    \"Observations\",\n    \"FE: Age Group\",\n    \"FE: Gender\",\n    \"FE: Type of Vehicle\",\n    \"FE: Weather\"\n  ),\n  fmt = c(0, 0, 0, 0, 0)\n)\n\nmodelsummary(\n  models,\n  stars = c(\"+\" = .1, \"*\" = .05, \"**\" = .01),\n  coef_map = cm,\n  gof_map = gm\n) |&gt;\n  group_tt(j = list(\"Hospitalization\" = 2:4, \"Died within 24 hours\" = 5:7))\n\n\n\n\n    \n\n    \n    \n      \n        \n\n \nHospitalization\nDied within 24 hours\n\n        \n              \n                 \n                (1)\n                (2)\n                (3)\n                (4)\n                (5)\n                (6)\n              \n        \n        + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01\n        \n                \n                  Passenger          \n                  0.026  \n                  0.501**\n                  0.475**\n                  -1.697** \n                  -1.445*  \n                  -1.440*  \n                \n                \n                                     \n                  (0.100)\n                  (0.069)\n                  (0.068)\n                  (0.616)  \n                  (0.631)  \n                  (0.631)  \n                \n                \n                  Pedestrian         \n                  2.117**\n                  2.381**\n                  2.298**\n                  2.190**  \n                  2.326**  \n                  2.327**  \n                \n                \n                                     \n                  (0.114)\n                  (0.061)\n                  (0.058)\n                  (0.260)  \n                  (0.248)  \n                  (0.246)  \n                \n                \n                  Positive Alcohol   \n                  0.007  \n                  0.355**\n                  0.381**\n                  -13.685**\n                  -13.421**\n                  -13.460**\n                \n                \n                                     \n                  (0.072)\n                  (0.081)\n                  (0.081)\n                  (0.059)  \n                  (0.055)  \n                  (0.054)  \n                \n                \n                  Observations       \n                  197477 \n                  197369 \n                  176133 \n                  118462   \n                  116344   \n                  112659   \n                \n                \n                  FE: Age Group      \n                  X      \n                  X      \n                  X      \n                  X        \n                  X        \n                  X        \n                \n                \n                  FE: Gender         \n                  X      \n                  X      \n                  X      \n                  X        \n                  X        \n                  X        \n                \n                \n                  FE: Type of Vehicle\n                         \n                  X      \n                  X      \n                           \n                  X        \n                  X        \n                \n                \n                  FE: Weather        \n                         \n                         \n                  X      \n                           \n                           \n                  X"
  },
  {
    "objectID": "posts/240321_lifecycle/index.html",
    "href": "posts/240321_lifecycle/index.html",
    "title": "A Simple Life Cycle Model",
    "section": "",
    "text": "This note examines the model of Parallel Computing by Rcpp.\nFor \\(t = 1, \\dots, T\\), households solve\n\\[\n\\begin{aligned}\nV(t, e, x) =& \\max_{c, x'} \\frac{c^{1 - \\sigma}}{1 - \\sigma} + \\beta \\mathbb{E}V(t + 1, e', x') \\\\\n&\\text{s.t. } \\\\\n& c + x' \\le (1 + r)x + ew \\\\\n& \\text{Pr}(e' | e) = \\Gamma(e) \\\\\n& x' \\ge 0\n\\end{aligned}\n\\]\n\n\nCode\n# Grid for x\nnx = 100\nxmin = 0.1\nxmax = 4.0\n\nx_grid = seq(from = xmin, to = xmax, by = (xmax - xmin) / (nx - 1))\n\n# Grid for e: parameters for Tauchen\nne = 15\nssigma_eps = 0.02058\nllambda_eps = 0.99\nm = 1.5\n\nP = Rtauchen(ne, ssigma_eps, llambda_eps, m)\ne_grid = exp(Tgrid(ne, ssigma_eps, llambda_eps, m))\n\n# Utility function\nssigma = 2\nbbeta = 0.97\nT = 10\n\n# Prices\nr = 0.07\nw = 5"
  },
  {
    "objectID": "posts/240321_lifecycle/index.html#model",
    "href": "posts/240321_lifecycle/index.html#model",
    "title": "A Simple Life Cycle Model",
    "section": "",
    "text": "This note examines the model of Parallel Computing by Rcpp.\nFor \\(t = 1, \\dots, T\\), households solve\n\\[\n\\begin{aligned}\nV(t, e, x) =& \\max_{c, x'} \\frac{c^{1 - \\sigma}}{1 - \\sigma} + \\beta \\mathbb{E}V(t + 1, e', x') \\\\\n&\\text{s.t. } \\\\\n& c + x' \\le (1 + r)x + ew \\\\\n& \\text{Pr}(e' | e) = \\Gamma(e) \\\\\n& x' \\ge 0\n\\end{aligned}\n\\]\n\n\nCode\n# Grid for x\nnx = 100\nxmin = 0.1\nxmax = 4.0\n\nx_grid = seq(from = xmin, to = xmax, by = (xmax - xmin) / (nx - 1))\n\n# Grid for e: parameters for Tauchen\nne = 15\nssigma_eps = 0.02058\nllambda_eps = 0.99\nm = 1.5\n\nP = Rtauchen(ne, ssigma_eps, llambda_eps, m)\ne_grid = exp(Tgrid(ne, ssigma_eps, llambda_eps, m))\n\n# Utility function\nssigma = 2\nbbeta = 0.97\nT = 10\n\n# Prices\nr = 0.07\nw = 5"
  },
  {
    "objectID": "posts/240321_lifecycle/index.html#results",
    "href": "posts/240321_lifecycle/index.html#results",
    "title": "A Simple Life Cycle Model",
    "section": "Results",
    "text": "Results\n\n\nCode\nV &lt;- solve(nx, x_grid, ne, e_grid, P, ssigma, bbeta, T, r, w)\n\ntibble(e = rep(1:ne, T * nx), v = V) |&gt;\n  mutate(t = (row_number() - 1) %/% (nx * ne) + 1) |&gt;\n  arrange(e, t) |&gt;\n  mutate(x = rep(x_grid, T * ne), e = factor(e)) |&gt;\n  filter(t %in% c(1, 4, 7, 10), e %in% c(1, 8, 15)) |&gt;\n  mutate(\n    lbl_facet = factor(\n      paste0(\"t = \", t),\n      levels = c(\"t = 1\", \"t = 4\", \"t = 7\", \"t = 10\")\n    )\n  ) |&gt;\n  ggplot(aes(x = x, y = v, color = e)) +\n  geom_line() +\n  scale_color_viridis_d(\n    option = \"rocket\",\n    end = 0.85,\n    labels = ~latex2exp::TeX(sprintf(\"$e_{%s}$\", .x))\n  ) +\n  facet_wrap(~lbl_facet) +\n  labs(x = \"x\", y = NULL, title = \"Value Function\") +\n  theme(legend.position = c(0.9, 0.1), panel.grid.major.x = element_blank())\n\n\n\n\n\n\n\n\n\n\nSimulations\n\n\nCode\nsimulate &lt;- function(ssigma, bbeta) {\n  V &lt;- solve(nx, x_grid, ne, e_grid, P, ssigma, bbeta, T, r, w)\n\n  tibble(ssigma = ssigma, bbeta = bbeta, e = rep(1:ne, T * nx), v = V) |&gt;\n    mutate(t = (row_number() - 1) %/% (nx * ne) + 1) |&gt;\n    arrange(e, t) |&gt;\n    mutate(x = rep(x_grid, T * ne))\n}\n\nssigmas &lt;- seq(2, 4, by = 0.1)\nbbetas &lt;- seq(0.92, 0.99, by = 0.01)\nexgrid &lt;- expand.grid(ssigmas, bbetas)\n\ndf_sim &lt;- map2(exgrid$Var1, exgrid$Var2, simulate) |&gt;\n  list_rbind() |&gt;\n  filter(e %in% c(1, 8, 15)) |&gt;\n  mutate(lbl = recode_factor(e, `1` = \"e₁\", `8` = \"e₈\", `15` = \"e₁₅\"))\n\nojs_define(data = df_sim)\n\n\n\n\nCode\nviewof t = Inputs.range(\n  [1, 10], \n  {value: 1, step: 1, label: \"t\"}\n)\nviewof ssigma = Inputs.range(\n  [2, 4], \n  {value: 2.0, step: 0.1, label: \"σ\"}\n)\nviewof bbeta = Inputs.range(\n  [0.92, 0.99], \n  {value: 0.97, step: 0.01, label: \"β\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfiltered = transpose(data).filter(function(sim) {\n    return sim.ssigma == ssigma && sim.bbeta == bbeta && sim.t == t\n})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    marginLeft: 50,\n    height: 400,\n    color: {domain: [\"e₁\", \"e₈\", \"e₁₅\"], legend: true},\n    x: {domain: [0.0, 4.0]},\n    y: {domain: [-2.5, 0.0]},\n    marks: [\n        Plot.lineY(filtered, {x: \"x\", y: \"v\", stroke: \"lbl\"}),\n    ]\n})"
  }
]